language: python
python:
  - "2.7"
  - "3.3"
  - "3.4"
  - "3.5"

notifications:
  email: false
  webhooks:
    urls:
      - https://webhooks.gitter.im/e/601eba4ae3738ceb2406
    on_success: change  # options: [always|never|change] default: always
    on_failure: always  # options: [always|never|change] default: always
    on_start: never     # options: [always|never|change] default: always

# Install scipy without need to compile, taken from Theano
# Setup anaconda
before_install:
# Install miniconda to avoid compiling scipy
  - mkdir -p download
  - cd download
  - wget -c http://repo.continuum.io/miniconda/Miniconda-latest-Linux-x86_64.sh -O miniconda.sh
  - chmod +x miniconda.sh
  - ./miniconda.sh -b
  - cd ..
  - export PATH=/home/travis/miniconda2/bin:$PATH
  - conda update --yes conda

# Install packages
install:
  - conda install --yes python=$TRAVIS_PYTHON_VERSION openblas numpy scipy nose libgfortran theano
  # Hacky fix for theano error
  # see http://stackoverflow.com/questions/11987325/theano-fails-due-to-numpy-fortran-mixup-under-ubuntu
  - pip install pep8
  - pip install coveralls
  - pip install autograd
  - pip install protobuf==3.0.0b2
  - if [ "$TRAVIS_PYTHON_VERSION" == "2.7" ]; then TENSORFLOW_PACKAGE_LOC="https://storage.googleapis.com/tensorflow/linux/cpu/tensorflow-0.7.1-cp27-none-linux_x86_64.whl"; fi
  - if [ "$TRAVIS_PYTHON_VERSION" == "3.4" ]; then TENSORFLOW_PACKAGE_LOC="https://storage.googleapis.com/tensorflow/linux/cpu/tensorflow-0.7.1-cp34-none-linux_x86_64.whl"; fi
  # If we're on python 3.3 or 3.5 then rename the tensorflow wheel so it doesn't throw error (very hacky)
  - if [ "$TRAVIS_PYTHON_VERSION" == "3.3" ]; then wget https://storage.googleapis.com/tensorflow/linux/cpu/tensorflow-0.7.1-cp34-none-linux_x86_64.whl -O tensorflow-0.7.1-cp33-none-linux_x86_64.whl; TENSORFLOW_PACKAGE_LOC="tensorflow-0.7.1-cp33-none-linux_x86_64.whl"; fi
  - if [ "$TRAVIS_PYTHON_VERSION" == "3.5" ]; then wget https://storage.googleapis.com/tensorflow/linux/cpu/tensorflow-0.7.1-cp34-none-linux_x86_64.whl -O tensorflow-0.7.1-cp35-none-linux_x86_64.whl; TENSORFLOW_PACKAGE_LOC="tensorflow-0.7.1-cp35-none-linux_x86_64.whl"; fi
  - pip install --no-deps "$TENSORFLOW_PACKAGE_LOC"
  - python setup.py install

script:
  - nosetests ./tests --verbosity=2 --with-coverage --cover-package=pymanopt
  - pep8 examples pymanopt tests setup.py
  # - cd examples && sh run_all.sh && cd ..

after_success:
  - coveralls
